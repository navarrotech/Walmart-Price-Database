

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: walmart-inspector-api
    ports:
      - 3000:3000
    volumes:
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./yarn.lock:/app/yarn.lock
      - ./prisma/:/app/prisma/
      - ./src/:/app/src/
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@walmart-inspector-database:5432/${POSTGRES_DB}
    depends_on:
      - database
    networks:
      - walmart-inspector-network

  database:
    image: postgres:latest
    container_name: walmart-inspector-database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - walmart-inspector-network

  # Portainer CE
  portainer:
    image: portainer/portainer-ce:latest
    container_name: walmart-inspector-portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - default

  # Nginx
  nginx:
    image: valian/docker-nginx-auto-ssl:latest
    container_name: walmart-inspector-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ssl_data:/etc/resty-auto-ssl
    environment:
      ALLOWED_DOMAINS: 'navarrotech.net'
      SITES: 'walmart.navarrotech.net=api:3000,walmart-admin.navarrotech.net=portainer:9000'
    networks:
      - walmart-inspector-network
      - default

volumes:
  ssl_data:
  portainer_data:

networks:
  walmart-inspector-network:
